apply plugin: 'com.google.protobuf'
apply plugin: 'antlr'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
    }

    tasks.withType(JavaExec) {
        classpath += files("src/main/dist/config")
    }
}

dependencies {
    // lucene
    compile "org.apache.lucene:lucene-core:$lucene"
    compile "org.apache.lucene:lucene-facet:$lucene"
    compile "org.apache.lucene:lucene-expressions:$lucene"
    compile "org.apache.lucene:lucene-analyzers-common:$lucene"
    compile "org.apache.lucene:lucene-analyzers-phonetic:$lucene"
    compile "org.apache.lucene:lucene-analyzers-icu:$lucene"
    compile "org.apache.lucene:lucene-backward-codecs:$lucene"
    compile "org.apache.lucene:lucene-codecs:$lucene"
    compile "org.apache.lucene:lucene-grouping:$lucene"
    compile "org.apache.lucene:lucene-classification:$lucene"
    compile "org.apache.lucene:lucene-highlighter:$lucene"
    compile "org.apache.lucene:lucene-join:$lucene"
    compile "org.apache.lucene:lucene-memory:$lucene"
    compile "org.apache.lucene:lucene-misc:$lucene"
    compile "org.apache.lucene:lucene-queries:$lucene"
    compile "org.apache.lucene:lucene-queryparser:$lucene"
    compile "org.apache.lucene:lucene-sandbox:$lucene"
    compile "org.apache.lucene:lucene-spatial:$lucene"
    compile "org.apache.lucene:lucene-spatial-extras:$lucene"
    compile "org.apache.lucene:lucene-spatial3d:$lucene"
    compile "org.apache.lucene:lucene-suggest:$lucene"
    compile "org.apache.lucene:lucene-test-framework:$lucene"

    compile "com.google.api.grpc:proto-google-common-protos:0.1.9"
    compile "io.grpc:grpc-netty:$grpcVersion"
    compile "io.grpc:grpc-protobuf:$grpcVersion"
    compile "io.grpc:grpc-stub:$grpcVersion"
    antlr "org.antlr:antlr4:4.7"

    testCompile "io.grpc:grpc-testing:$grpcVersion"
    runtime files('src/main/dist/config')
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }

        // https://github.com/google/protobuf/issues/2054
        all().each { task ->
            task.doLast {
                ant.replaceregexp(
                        match: '(.*\\.valueOf.*)',
                        replace: '    @SuppressWarnings("deprecation")\n\\1',
                        flags: 'g',
                        byline: true
                ) {
                    fileset(
                            dir: "${protobuf.generatedFilesBaseDir}/main/java")
                }
            }
        }
    }
}

compileKotlin {
    kotlinOptions {
        suppressWarnings = true
    }
    dependsOn('generateProto')
}

sourceSets {
    main.kotlin.srcDirs = [
            "${projectDir}/src/main/java",
            "${projectDir}/build/generated/source/proto/main/java",
            "${projectDir}/build/generated/source/proto/main/grpc",
            "${projectDir}/build/generated-src/antlr/main",
            "${projectDir}/src/main/kotlin"
    ]
}

idea {
    module {
        // Not using generatedSourceDirs because of
        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java")
        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc")
        sourceDirs += file("${projectDir}/build/generated-src/antlr/main")
    }
}